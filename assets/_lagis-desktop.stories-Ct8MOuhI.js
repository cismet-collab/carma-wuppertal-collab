import{j as e}from"./jsx-runtime-DEdD30eg.js";import"./index-RYns6xqu.js";const a={ubersicht:"Übersicht",verwaltungsbereiche:"Verwaltungsbereiche",mipa:"Miet- und Pachtverträge",rebe:"Rechte und Belastungen",nutzung:"Nutzung",vorgange:"Vorgänge",historie:"Historie",kassenzeichen:"Kassenzeichen",dms:"DMS"},D={allgemeinTitle:"Allgemein",synchronisierenText:"Flurstück mit Java Anwendung synchronisieren",karteTitle:"Karte",optionaleTitle:"Optionale Layer",abtOpt:"Abteilung 9",baulastnachweisOpt:"Baulastnachweis",stadtFstckOpt:"Städt. Flurstücke",alkisLandparcels:"Flurstücke",hintergrundTitle:"Hintergrund",liegenschaftskarteGrauOpt:"Liegenschaftskarte (grau)",liegenschaftskarteBuntOpt:"Liegenschaftskarte (bunt)",trueOrthoOpt:"True Orthofoto",lbkOpt:"Luftbildkarte",stadtplanGrauOpt:"Stadtplan (grau)",stadtplanOpt:"Stadtplan (bunt)"},A={title:"Lagis-desktop"},L=()=>Object.keys(a).map(s=>e.jsx("p",{children:a[s]})),t={render:()=>e.jsx(L,{})},M=()=>{const{allgemeinTitle:n,synchronisierenText:s,karteTitle:o,optionaleTitle:h,abtOpt:g,baulastnachweisOpt:m,stadtFstckOpt:x,alkisLandparcels:O,hintergrundTitle:j,liegenschaftskarteGrauOpt:k,liegenschaftskarteBuntOpt:b,trueOrthoOpt:T,lbkOpt:w,stadtplanGrauOpt:y,stadtplanOpt:f}=D;return e.jsxs("div",{children:[e.jsx("h3",{children:n}),e.jsx("p",{children:s}),e.jsx("h3",{style:{margin:"2rem 0"},children:o}),e.jsx("h4",{children:h}),e.jsx("p",{children:g}),e.jsx("p",{children:m}),e.jsx("p",{children:x}),e.jsx("p",{children:O}),e.jsx("h3",{style:{margin:"2rem 0"},children:j}),e.jsx("p",{children:k}),e.jsx("p",{children:b}),e.jsx("p",{children:T}),e.jsx("p",{children:w}),e.jsx("p",{children:y}),e.jsx("p",{children:f})]})},r={render:()=>e.jsx(M,{})};var i,l,c;t.parameters={...t.parameters,docs:{...(i=t.parameters)==null?void 0:i.docs,source:{originalSource:`{
  render: () => {
    return <DisplayMenu />;
  }
}`,...(c=(l=t.parameters)==null?void 0:l.docs)==null?void 0:c.source}}};var p,u,d;r.parameters={...r.parameters,docs:{...(p=r.parameters)==null?void 0:p.docs,source:{originalSource:`{
  render: () => {
    return <DisplayDrawer />;
  }
}`,...(d=(u=r.parameters)==null?void 0:u.docs)==null?void 0:d.source}}};const F=["MenuNamesList","DrawerTexts"];export{r as DrawerTexts,t as MenuNamesList,F as __namedExportsOrder,A as default};
